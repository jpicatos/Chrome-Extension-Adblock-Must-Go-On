(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=1)})([,function(module,exports){eval('// /* popup.js\n//  *\n//  * This file initializes its scripts after the popup has loaded.\n//  *\n//  * It shows how to access global variables from background.js.\n//  * Note that getViews could be used instead to access other scripts.\n//  *\n//  * A port to the active tab is open to send messages to its in-content.js script.\n//  *\n//  */\n\n// // Start the popup script, this could be anything from a simple script to a webapp\n// const initPopupScript = () => {\n//     // Access the background window object\n//     const backgroundWindow = chrome.extension.getBackgroundPage();\n//     // Do anything with the exposed variables from background.js\n//     console.log(backgroundWindow.sampleBackgroundGlobal);\n\n//     // This port enables a long-lived connection to in-content.js\n//     let port = null;\n\n//     // Send messages to the open port\n//     const sendPortMessage = message => port.postMessage(message);\n\n//     // Find the current active tab\n//     const getTab = () =>\n//         new Promise(resolve => {\n//             chrome.tabs.query(\n//                 {\n//                     active: true,\n//                     currentWindow: true\n//                 },\n//                 tabs => resolve(tabs[0])\n//             );\n//         });\n\n//     // Handle port messages\n//     const messageHandler = message => {\n//         console.log(\'popup.js - received message:\', message);\n//     };\n\n//     // Find the current active tab, then open a port to it\n//     getTab().then(tab => {\n//         // Connects to tab port to enable communication with inContent.js\n//         port = chrome.tabs.connect(tab.id, { name: \'chrome-extension-template\' });\n//         // Set up the message listener\n//         port.onMessage.addListener(messageHandler);\n//         // Send a test message to in-content.js\n//         sendPortMessage(\'Message from popup!\');\n//     });\n// };\n\n// // Fire scripts after page has loaded\n// document.addEventListener(\'DOMContentLoaded\', initPopupScript);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvcG9wdXAuanM/MDIyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvKiBwb3B1cC5qc1xyXG4vLyAgKlxyXG4vLyAgKiBUaGlzIGZpbGUgaW5pdGlhbGl6ZXMgaXRzIHNjcmlwdHMgYWZ0ZXIgdGhlIHBvcHVwIGhhcyBsb2FkZWQuXHJcbi8vICAqXHJcbi8vICAqIEl0IHNob3dzIGhvdyB0byBhY2Nlc3MgZ2xvYmFsIHZhcmlhYmxlcyBmcm9tIGJhY2tncm91bmQuanMuXHJcbi8vICAqIE5vdGUgdGhhdCBnZXRWaWV3cyBjb3VsZCBiZSB1c2VkIGluc3RlYWQgdG8gYWNjZXNzIG90aGVyIHNjcmlwdHMuXHJcbi8vICAqXHJcbi8vICAqIEEgcG9ydCB0byB0aGUgYWN0aXZlIHRhYiBpcyBvcGVuIHRvIHNlbmQgbWVzc2FnZXMgdG8gaXRzIGluLWNvbnRlbnQuanMgc2NyaXB0LlxyXG4vLyAgKlxyXG4vLyAgKi9cclxuXHJcbi8vIC8vIFN0YXJ0IHRoZSBwb3B1cCBzY3JpcHQsIHRoaXMgY291bGQgYmUgYW55dGhpbmcgZnJvbSBhIHNpbXBsZSBzY3JpcHQgdG8gYSB3ZWJhcHBcclxuLy8gY29uc3QgaW5pdFBvcHVwU2NyaXB0ID0gKCkgPT4ge1xyXG4vLyAgICAgLy8gQWNjZXNzIHRoZSBiYWNrZ3JvdW5kIHdpbmRvdyBvYmplY3RcclxuLy8gICAgIGNvbnN0IGJhY2tncm91bmRXaW5kb3cgPSBjaHJvbWUuZXh0ZW5zaW9uLmdldEJhY2tncm91bmRQYWdlKCk7XHJcbi8vICAgICAvLyBEbyBhbnl0aGluZyB3aXRoIHRoZSBleHBvc2VkIHZhcmlhYmxlcyBmcm9tIGJhY2tncm91bmQuanNcclxuLy8gICAgIGNvbnNvbGUubG9nKGJhY2tncm91bmRXaW5kb3cuc2FtcGxlQmFja2dyb3VuZEdsb2JhbCk7XHJcblxyXG4vLyAgICAgLy8gVGhpcyBwb3J0IGVuYWJsZXMgYSBsb25nLWxpdmVkIGNvbm5lY3Rpb24gdG8gaW4tY29udGVudC5qc1xyXG4vLyAgICAgbGV0IHBvcnQgPSBudWxsO1xyXG5cclxuLy8gICAgIC8vIFNlbmQgbWVzc2FnZXMgdG8gdGhlIG9wZW4gcG9ydFxyXG4vLyAgICAgY29uc3Qgc2VuZFBvcnRNZXNzYWdlID0gbWVzc2FnZSA9PiBwb3J0LnBvc3RNZXNzYWdlKG1lc3NhZ2UpO1xyXG5cclxuLy8gICAgIC8vIEZpbmQgdGhlIGN1cnJlbnQgYWN0aXZlIHRhYlxyXG4vLyAgICAgY29uc3QgZ2V0VGFiID0gKCkgPT5cclxuLy8gICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuLy8gICAgICAgICAgICAgY2hyb21lLnRhYnMucXVlcnkoXHJcbi8vICAgICAgICAgICAgICAgICB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiB0cnVlLFxyXG4vLyAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRXaW5kb3c6IHRydWVcclxuLy8gICAgICAgICAgICAgICAgIH0sXHJcbi8vICAgICAgICAgICAgICAgICB0YWJzID0+IHJlc29sdmUodGFic1swXSlcclxuLy8gICAgICAgICAgICAgKTtcclxuLy8gICAgICAgICB9KTtcclxuXHJcbi8vICAgICAvLyBIYW5kbGUgcG9ydCBtZXNzYWdlc1xyXG4vLyAgICAgY29uc3QgbWVzc2FnZUhhbmRsZXIgPSBtZXNzYWdlID0+IHtcclxuLy8gICAgICAgICBjb25zb2xlLmxvZygncG9wdXAuanMgLSByZWNlaXZlZCBtZXNzYWdlOicsIG1lc3NhZ2UpO1xyXG4vLyAgICAgfTtcclxuXHJcbi8vICAgICAvLyBGaW5kIHRoZSBjdXJyZW50IGFjdGl2ZSB0YWIsIHRoZW4gb3BlbiBhIHBvcnQgdG8gaXRcclxuLy8gICAgIGdldFRhYigpLnRoZW4odGFiID0+IHtcclxuLy8gICAgICAgICAvLyBDb25uZWN0cyB0byB0YWIgcG9ydCB0byBlbmFibGUgY29tbXVuaWNhdGlvbiB3aXRoIGluQ29udGVudC5qc1xyXG4vLyAgICAgICAgIHBvcnQgPSBjaHJvbWUudGFicy5jb25uZWN0KHRhYi5pZCwgeyBuYW1lOiAnY2hyb21lLWV4dGVuc2lvbi10ZW1wbGF0ZScgfSk7XHJcbi8vICAgICAgICAgLy8gU2V0IHVwIHRoZSBtZXNzYWdlIGxpc3RlbmVyXHJcbi8vICAgICAgICAgcG9ydC5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIobWVzc2FnZUhhbmRsZXIpO1xyXG4vLyAgICAgICAgIC8vIFNlbmQgYSB0ZXN0IG1lc3NhZ2UgdG8gaW4tY29udGVudC5qc1xyXG4vLyAgICAgICAgIHNlbmRQb3J0TWVzc2FnZSgnTWVzc2FnZSBmcm9tIHBvcHVwIScpO1xyXG4vLyAgICAgfSk7XHJcbi8vIH07XHJcblxyXG4vLyAvLyBGaXJlIHNjcmlwdHMgYWZ0ZXIgcGFnZSBoYXMgbG9hZGVkXHJcbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBpbml0UG9wdXBTY3JpcHQpO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL3BvcHVwLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')}]);